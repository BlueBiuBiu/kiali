{
  "%Error": "%Error",
  "%Req": "% Req",
  "%Success": "%Success",
  "1UnreadMessage": "1 Unread Message",
  "95thPercentile": "95th Percentile",
  "99thPercentile": "99th Percentile",
  "ALLOW": "ALLOW",
  "ALLOW_ALL": "ALLOW_ALL",
  "AUTHORIZACION_POLICY": "AUTHORIZACION_POLICY",
  "AUTO_PASSTHROUGH": "AUTO_PASSTHROUGH",
  "AbortPercentage": "Abort Percentage",
  "About": "About",
  "AccessDenied": "Access denied",
  "Actions": "Actions",
  "Adapter": "Adapter",
  "AddCondition": "Add Condition to When List",
  "AddConnectionPool": "Add Connection Pool",
  "AddFilter": "Add Filter",
  "AddGateway": "Add Gateway",
  "AddK8sAPIGateway": "Add K8s API Gateway",
  "AddLoadBalancer": "Add LoadBalancer",
  "AddMatch": "Add Match",
  "AddMore": "Add more",
  "AddOutlierDetection": "Aort Percentation",
  "AddPeerAuthentication": "Add PeerAuthentication",
  "AddPermissionRef": "Refer to the Kiali documentation for details on how you can add this permission.",
  "AddPort": "Add Port",
  "AddRouteRule": "Add Route Rule",
  "AddSourceToList": "Add Source to From List",
  "AdditionalDetail": "Additional Detail",
  "AdditionalState": "Additional State",
  "Address": "Address",
  "Addresses": "Addresses",
  "AdvancedOptions": "Advanced Options",
  "All": "All",
  "Ambient": "Ambient",
  "AnyRequest": "Any request",
  "AppLabel": "App Label",
  "AppName": "App Name",
  "AppProtocol": "App Protocol",
  "Application": "Application",
  "Applications": "Applications",
  "Apps": "Apps",
  "Attempts": "Attempts",
  "AttributeManifest": "Attribute Manifest",
  "AuthorizationPolicies": "Authorization Policies",
  "AuthorizationPolicy": "Authorization Policy",
  "Average": "Average",
  "Back": "Back",
  "Both": "Both",
  "CACertificate": "CA Certificate",
  "CACertificates": "CA Certificates",
  "CanaryUpgradeStatus": "Canary upgrade status",
  "Cancel": "Cancel",
  "CertificatesInformation": "Certificates information",
  "Clear": "Clear",
  "ClearAll": "Clear All",
  "ClientCertRequired": "Client Certificate must be non empty",
  "ClientCertificate": "Client Certificate",
  "Close": "Close",
  "CloseLegend": "Close Legend",
  "CloseOverview": "Close Overview",
  "CloseReplay": "Close Replay",
  "Cluster": "Cluster",
  "ClusterBoxes": "Cluster Boxes",
  "ClusterRBACConfiguration": "Cluster RBAC Configuration",
  "ClusterRbacConfig": "ClusterRbacConfig",
  "Clusters": "Clusters",
  "Code": "Code",
  "Collapse": "Collapse",
  "CompactView": "Compact view",
  "CompareWithSimilarTraces": "Compare with similar traces",
  "ComparedWithMetrics": "Compared with metrics",
  "ComparisonMap": "Comparison map",
  "Component": "Component",
  "Components": "Components",
  "CompressedHide": "Compressed Hide",
  "ConditionBuilder": "Condition Builder",
  "ConditionKey": "Condition Key",
  "Config": "Config",
  "Configuration": "Configuration",
  "ConfigurationAnalysis": "Configuration Analysis",
  "ConfigurationValidation": "Configuration Validation",
  "Confirm": "Confirm",
  "ConfirmDelete": "Confirm Delete",
  "Consecutive Errors": "Consecutive Errors",
  "ConsistentHash": "Consistent Hash",
  "Container": "Container",
  "Contribute": "Contribute",
  "ControlPlaneMetrics": "Control plane metrics",
  "Copy": "Copy",
  "CopyAllResources": "Copy all resources",
  "CopyConfig": "Copy config dump to clipboard",
  "Create": "Create",
  "CreateGateway": "Create Gateway",
  "CreateK8sAPIGateway": "Create K8s API Gateway",
  "Created": "Created",
  "CreatedBy": "Created By",
  "CurrentDuration": "Current duration",
  "CurrentGraph": "Current Graph",
  "CurrentRefreshInterval": "Current refresh interval",
  "CurrentTimeRange": "Current time range",
  "Custom": "Custom",
  "DENY": "DENY",
  "DENYRequiresRule": "DENY action requires at least one Rule",
  "DENY_ALL": "DENY_ALL",
  "DISABLE": "DISABLE",
  "DISABPERMISSIVELE": "PERMISSIVE",
  "DNSNames": "DNS Names",
  "Dark": "Dark",
  "DebugInformation": "Debug information",
  "Default": "Default",
  "DelayPercentage": "Delay Percentage",
  "Delete": "Delete",
  "DeleteTrafficPolicies": "Delete Traffic Policies",
  "DeleteTrafficRouting": "Delete Traffic Routing",
  "Description": "Description",
  "Destination": "Destination",
  "Destination Rule": "Destination Rule",
  "DestinationHosts": "Destination Hosts",
  "DestinationPrincipal": "Destination principal",
  "DestinationRule": "DestinationRule",
  "DestinationService": "Destination Service",
  "DestinationWorkload": "Destination Workload",
  "Details": "Details",
  "Direction": "Direction",
  "DisableAutoInjection": "Disable Auto Injection",
  "DisableDrag": "Disable Drag",
  "Disabled": "Disabled",
  "DisabledFeatures": "The following features are disabled",
  "Distributed Tracing": "Distributed Tracing",
  "Documentation": "Documentation",
  "Domains": "Domains",
  "Done": "Done",
  "Download": "Download",
  "Duration": "Duration",
  "EditAnnotations": "Edit Annotations",
  "EditInKiali": "Edit in Kiali",
  "Egress": "Egress",
  "EgressHost": "Egress Host",
  "EmptyDashboard": "Empty dashboard",
  "EmptyValue": "Empty value",
  "EnableDrag": "Enable Drag",
  "EnableIdleNodeDisplay": "Enabling 'Idle nodes' display option for graph find/hide expression",
  "Enabled": "Enabled",
  "Endpoints": "Endpoints",
  "Envoy": "Envoy",
  "Envoy Filter": "Envoy Filter",
  "EnvoyAccessLogEntry": "Envoy Access Log Entry",
  "EnvoyFilter": "EnvoyFilter",
  "ErrorFetchingTraces": "Error fetching traces",
  "ErrorLoadingMetrics": "Error loading metrics",
  "Errors": "Errors",
  "EvenlyDistributeTraffic": "Evenly distribute traffic",
  "Every": "Every ",
  "Examples": "Examples",
  "Expand": "Expand",
  "Expandview": "Expand view",
  "Expression": "Expression",
  "External": "External",
  "ExternalName": "External Name",
  "ExternalService": "External Service",
  "ExternalServiceEntry": "External Service Entry",
  "FQDN": "Fully Qualified Domain Name",
  "FaultInjectionAbort": "Fault Injection: Abort",
  "FaultInjectionDelay": "Fault Injection: Delay",
  "FederatedService": "Federated Service",
  "Federation": "Federation",
  "FilteringSelected": "Filtering selected",
  "Find": "Find",
  "FindUsOnGitHub": "Find us on GitHub",
  "FixedDelay": "Fixed Delay",
  "Flags": "Flags",
  "FlagsByCode": "Response flags by code",
  "From": "From",
  "FromList": "From List",
  "FromNamespaces": "From Namespaces",
  "FullDuration": "Full duration",
  "FullTraceDuration": "Full trace duration",
  "GATEWAY": "GATEWAY",
  "GatewayClass": "Gateway Class",
  "GatewayHosts": "Gateway Hosts",
  "Gateways": "Gateways",
  "Graph": "Graph",
  "Graph [Cy]": "Graph [Cy]",
  "Graph [PF]": "Graph [PF]",
  "GraphFindOrHide": "Graph Find/Hide",
  "GraphRenderError": "There was an error when rendering the graph",
  "GraphTour": "GraphTour",
  "HTTPRoute": "HTTPRoute",
  "Handler": "Handler",
  "HasCircuitBreaker": "Has Circuit Breaker",
  "HasFaultInjection": "Has Fault Injection",
  "HasMirroring": "Has Mirroring",
  "HasMissingSidecar": "Has Missing Sidecar",
  "HasNoRunningPods": "Has No Running Pods",
  "HasRequestRouting": "Has Request Routing",
  "HasRequestTimeout": "Has Request Timeout",
  "HasTrafficShifting": "Has Traffic Shifting",
  "HasVirtualService": "Has Virtual Service",
  "Health": "Health",
  "HealthFor": "Health for",
  "HealthyRequest": "Healthy Request",
  "Help": "Help",
  "Hide": "Hide",
  "HideAllEdges": "Hide all edges",
  "HideDetail": "Hide Detail",
  "HideHealthyEdges": "Hide healthy edges",
  "Histograms": "Histograms",
  "Host": "Host",
  "Hostname": "Hostname",
  "HostnameIsIncorrect": "Hostname is incorrect",
  "Hostnames": "Hostnames",
  "Hosts": "Hosts",
  "HostsByCode": "Hosts by code",
  "IPAddress": "IPAddress",
  "ISTIO_MUTUAL": "ISTIO_MUTUAL",
  "IdleEdges": "Idle Edges",
  "IdleNodes": "Idle Nodes",
  "Inbound": "Inbound",
  "InboundEdges": "Inbound Edges",
  "InboundMetrics": "Inbound Metrics",
  "InboundTraffic": "Inbound Traffic",
  "Include": "Include ",
  "Instance": "Instance",
  "InternalServiceEntry": "Internal Service Entry",
  "InvalidCredentials": "Unauthorized. The provided credentials are not valid to access Kiali. Please check your credentials and try again.",
  "InvalidOperand": "Invalid operand",
  "InvalidRankRange": "Invalid rank range",
  "InvalidValue": "Invalid value",
  "IsGateway": "Is Gateway",
  "Issuer": "Issuer",
  "IstioServiceMeshMgr": "Service mesh management for Istio.",
  "IstiodMemoryInfo": "This values represents the memory of the istiod",
  "JWTRuleBuilder": "JWT Rule Builder",
  "JWTRules": "JWT Rules",
  "JWTRulesList": "JWT Rules List",
  "K8SGATEWAY": "K8SGATEWAY",
  "K8sAPIGatewayHosts": "K8s API Gateway Hosts",
  "K8sGateway": "Gateway (K8s)",
  "K8sGateways": "K8s Gateways",
  "K8sHTTPRoute": "HTTPRoute (K8s)",
  "K8sHTTPRouteHosts": "K8s HTTPRoute Hosts",
  "K8sRulesCreated": "K8sRules Created",
  "Key": "Key",
  "KialiConfig": "Kiali Config",
  "KialiConnectionError": "Error connecting to Kiali",
  "KialiConsole": "Kiali Console",
  "KialiContainer": "Kiali Container",
  "KialiHomeCluster": "Kiali home cluster",
  "Kubernetes": "Kubernetes",
  "Label": "Label",
  "Labels": "Labels",
  "LabelFilterHelp": "Label Filter Help",
  "LabelOperation": "Label Operation",
  "LabelValidation": "Label Validation",
  "Labelslist": "Labels list",
  "Last": "Last",
  "LeaveInquire": "You have unsaved changes, are you sure you want to leave?",
  "Light": "Light",
  "LimitPerQuery": "Limit per query",
  "ListView": "List view",
  "ListenerList": "Listener List",
  "Listeners": "Listeners",
  "LoadBalancer": "LoadBalancer",
  "LoadStatistics": "Load statistics",
  "Loading": "Loading",
  "LoadingMetrics": "Loading metrics",
  "LoadingTraceDetails": "Loading trace details",
  "Location": "Location",
  "LogIn": "Log In",
  "LogInKiali": "Log in Kiali",
  "LogInWithOpenID": "Log In With OpenID",
  "LogInWithOpenShift": "Log In With OpenShift",
  "LogOut": "Log Out",
  "LoginUnsuccessful": "Login unsuccessful",
  "LogoutFailed": "Logout failed",
  "Logs": "Logs",
  "MESH_EXTERNAL": "MESH_EXTERNAL",
  "MESH_INTERNAL": "MESH_INTERNAL",
  "MUTUAL": "MUTUAL",
  "MarkAllRead": "Mark All Read",
  "Match": "Match",
  "MatchAnyRequest": "Match any request",
  "Matching Selected": "Matching selected",
  "MaxConnections": "Max Connections",
  "Mean": "Mean",
  "MeanOfTraces": "the mean of all similar traces on chart",
  "Median": "Median",
  "Memory": "Memory",
  "Mesh": "Mesh",
  "MeshPolicy": "Mesh Policy",
  "MessageCenter": "Message Center",
  "MetricsSettings": "Metrics Settings",
  "MigratedNamespaces": "Migrated namespaces",
  "MinTLSversion": "Min TLS version",
  "MirrorPercentage": "Mirror Percentage",
  "Mirrored Workload": "Mirrored Workload",
  "MirroredWorkload": "Mirrored Workload",
  "Missing": "Missing",
  "MissingRootSpan": "(Missing root span)",
  "MissingSidecars": "Missing Sidecars",
  "Mode": "Mode",
  "Mode1": " Mode",
  "MoreSpanDetails": "More span details",
  "MoveDown": "Move Down",
  "MoveUp": "Move Up",
  "NONE": "NONE",
  "Name": "Name",
  "Namespace": "Namespace",
  "NamespaceBoxes": "Namespace Boxes",
  "NamespaceGraph": "Namespace Graph",
  "NamespaceLabel": "Namespace Label",
  "Next": "Next",
  "No": "No ",
  "NoAddressesDefined": "No Addresses defined",
  "NoCertInfo": "No cert info",
  "NoClustersFound": "No clusters found",
  "NoEgressDefined": "Sidecar has no Egress Hosts Defined",
  "NoGatewaySelected": "There are no gateways to select.",
  "NoHealthInformation": "No health information",
  "NoHostInfo": "No Host Information Available",
  "NoIssuesFound": "No issues found",
  "NoK8sGatewayAvail": "There are no K8s API gateways to select.",
  "NoLabels": "No labels",
  "NoListenersDefined": "No Listeners defined",
  "NoMatchingSources": "No Source Matches Defined",
  "NoMessagesAvailable": "No Messages Available",
  "NoNamespacesFound": "No namespaces found",
  "NoOperationsDefined": "No Operations Defined",
  "NoRequestFilter": "No Request Filter",
  "NoRequests": "No requests",
  "NoResultsFound": "No results found",
  "NoRules": "No Rules Defined.",
  "NoServersDefined": "No Servers defined",
  "NoService": "No Service is selected",
  "NoTraceResults": "No trace results. Try another query.",
  "NoTraces": "No traces",
  "NoTrafficChart": "Not enough traffic to generate chart.",
  "NoUnfilteredNamespaces": "No unfiltered namespaces",
  "NodeGraph": "Node Graph",
  "Nodes": "Nodes",
  "NotFound": "Not found",
  "NotHealthy": "Not healthy",
  "NotImplemented": "Not implemented (“-“).",
  "NotReady": "Not ready",
  "NotValid": "Not Valid",
  "NotValidated": "Not Validated",
  "NotValues": "Not Values",
  "NotPresent": "Not Present",
  "Note": "Note",
  "Notes": "Notes",
  "Notifications": "Notifications",
  "OK": "OK",
  "OpenIssue": "Open Issue",
  "OpenIssues": "Open issues",
  "OperationBuilder": "Operation Builder",
  "OperationField": "Operation Field",
  "OperationName": "Operation name",
  "OperationNodes": "Operation Nodes",
  "Operator": "Operator",
  "Operators": "Operators",
  "OutOfMesh": "Out of Mesh",
  "Outbound": "Outbound",
  "OutboundEdges": "Outbound Edges",
  "OutboundMetrics": "Outbound Metrics",
  "OutboundPolicy": "Outbound policy",
  "OutboundTraffic": "Outbound Traffic",
  "Overview": "Overview",
  "OverviewStatus": "Overview status",
  "PASSTHROUGH": "PASSTHROUGH",
  "PEER_AUTHENTICATION": "PEER_AUTHENTICATION",
  "PartiallyEnabled": "Partially Enabled",
  "Pause": "Pause",
  "Peer Authentication": "Peer Authentication",
  "PeerAuthentication": "PeerAuthentication",
  "PerTryTimeout": "Per Try Timeout",
  "PercentSuccess": "Percent Success",
  "Play": "Play",
  "PlayAgain": "Play again",
  "Port": "Port",
  "PortIsIncorrect": "Port is incorrect",
  "PortName": "Port Name",
  "Ports": "Ports",
  "PostLoginError": "Kiali failed to initialize. Please ensure that services Kiali depends on, such as Prometheus, are healthy and reachable by Kiali then refresh your browser.",
  "Present": "Present",
  "Preview": "Preview",
  "PreviewTrafficPolicies": "Preview Traffic Policies",
  "Principals": "Principals",
  "PrivateKey": "Private Key",
  "PrivateKeyRequired": "Private Key must be non empty",
  "Protocol": "Protocol",
  "ProxyProtocolFilter": "Proxy Protocol filter",
  "ProxyPushTime": "Proxy push time",
  "Quantile": "Quantile",
  "RBACConfiguration": "RBAC Configuration",
  "REQUEST_AUTHENTICATION": "REQUEST_AUTHENTICATION",
  "ROUND_ROBIN": "ROUND_ROBIN",
  "RULES": "RULES",
  "Rank": "Rank",
  "Rate": "Rate",
  "ReadOnlyMode": "Read only mode",
  "ReceivedBytes": "Received Bytes",
  "ReceivedMessages": "Received Messages",
  "ReceivedRequest": "Received request",
  "References": "References",
  "Refresh": "Refresh",
  "RefreshInquire": "You have unsaved changes, are you sure you want to refresh?",
  "RefreshInterval": "Refresh interval",
  "Regex": "Regex",
  "Related": "Related",
  "Reload": "Reload",
  "RemoteCluster": "Remote Cluster",
  "Remove": "Remove",
  "RemoveAutoInjection": "Remove Auto Injection",
  "RemoveCondition": "Remove Condition",
  "RemoveFrom": "Remove From",
  "RemoveJWTRule": "Remove JWT Rule",
  "RemoveRule": "Remove Rule",
  "RemoveServer": "Remove Server",
  "RemoveTo": "Remove To",
  "Replay": "Replay",
  "ReplayLength": "Replay length",
  "ReplayStartTime": "Replay start time",
  "ReportedFrom": "Reported from",
  "Request": "Request",
  "Request Authentication": "Request Authentication",
  "RequestAuthentication": "Request Authentication",
  "RequestMatching": "Request Matching",
  "RequestRetry": "Request Retry",
  "RequestTimeout": "Request Timeout",
  "RequestTimeouts": "Request Timeouts",
  "Requests": "Requests",
  "RequireNumericInput": "Expected a numeric value (use '.' for decimals)",
  "RequireRange1to100": "Expected a number between 1..100",
  "Reset": "Reset",
  "ResetFactoryConfig": "Reset to factory settings",
  "Resolution": "Resolution",
  "Response": "Response",
  "ResponseStatus": "Response status",
  "RetryCount": "Number of retries for a given request.",
  "RouteFiltering": "Route Filtering",
  "RouteK8sRules": "Route K8sRules",
  "RouteRules": "Route Rules",
  "RouteTo": "Route To",
  "Rule": "Rule",
  "RuleNeedsItem": "A Rule needs at least an item in 'From', 'To' or 'When' sections",
  "RuleOrder": "Rule order",
  "RulesCreated": "Rules Created",
  "Runtimes": "Runtimes",
  "SERVICE_ENTRY": "SERVICE_ENTRY",
  "SIMPLE": "SIMPLE",
  "STRICT": "STRICT",
  "Same": "Same",
  "Save": "Save",
  "Security": "Security",
  "SelectAll": "Select all",
  "SelectClusters": "Select Clusters",
  "SelectGateway": "Select Gateway",
  "SelectK8sAPIGateway": "Select K8s API Gateway",
  "SelectNamespaces": "Select Namespaces",
  "Selector": "Selector",
  "SentBytes": "Sent Bytes",
  "SentMessages": "Sent Messages",
  "SentRequest": "Sent request",
  "ServerCertificate": "Server Certificate",
  "ServerList": "Server List",
  "ServerTLSCertPath": "The path to the file holding the server-side TLS certificate to use.",
  "Servers": "Servers",
  "Service": "Service",
  "ServiceAccount": "Service Account",
  "ServiceAccounts": "Service accounts",
  "ServiceEntry": "ServiceEntry",
  "ServiceEntryMissingPorts": "ServiceEntry has no Ports defined",
  "ServiceIP": "Service IP",
  "ServiceMesh": "Service Mesh",
  "ServiceName": "Service Name",
  "ServiceNodes": "Service Nodes",
  "ServiceRole": "Service Role",
  "ServiceRoleBinding": "Service Role Binding",
  "ServiceType": "Service Type",
  "ServiceValidationResult": "Service validation result",
  "Services": "Services",
  "SessionTimeout": "Session Timeout",
  "Shortcuts": "Shortcuts",
  "Show": "Show",
  "ShowAllEdges": "Show all edges",
  "ShowBadge": "Show Badge",
  "ShowBadges": "Show Badges",
  "ShowDetail": "Show Detail",
  "ShowDetails": "Show details",
  "ShowEdgeLabels": "Show Edge Labels",
  "ShowFullGraph": "Show full graph",
  "ShowInTracing": "Show in Tracing",
  "ShowLegend": "Show Legend",
  "ShowMetricsBy": "Show metrics by",
  "ShowNodeGraph": "Show node graph",
  "ShowOverview": "Show Overview",
  "ShowSpan": "Show span",
  "ShowTraces": "Show Traces",
  "Sidecars": "Sidecars",
  "SimilarTraces": "Similar traces",
  "Simple": "Simple",
  "SortableTable": "Sortable Table",
  "Source": "Source",
  "SourceBuilder": "Source Builder",
  "SourceField": "Source Field",
  "SourceIP": "Source IP",
  "SourcePrincipal": "Source principal",
  "SpanDetails": "Span Details",
  "SpanErrorReported": "This span reported an error",
  "SpansAverage": "Spans average",
  "SpansAverageDuration": "Spans average duration",
  "StartOnClick": "click Play to start",
  "Started": "Started",
  "StartedAfter": "Started after",
  "Status": "Status",
  "Subset": "Subset",
  "Substring": "Substring",
  "SwitchTo": "Switch to ",
  "TargetPort": "Target Port",
  "Telemetry": "Telemetry",
  "Template": "Template",
  "TimeRange": "Time range",
  "Timeout": "Timeout",
  "Timestamps": "Timestamps",
  "To": "To",
  "ToList": "To List",
  "Toggle": "Toggle",
  "ToggleDrag": "Toggle Drag",
  "Token": "Token",
  "Toolbar": "Toolbar",
  "Topic": "Topic",
  "Total": "Total",
  "TotalBytes": "Total Bytes",
  "TotalMessages": "Total Messages",
  "TraceDetails": "Trace Details",
  "Traces": "Traces",
  "Tracing": "Tracing",
  "Traffic": "Traffic",
  "TrafficAnimation": "Traffic Animation",
  "TrafficMetricsPerFrame": "Traffic metrics per frame",
  "TrafficMetricsPerRefresh": "Traffic metrics per refresh",
  "TrafficPolicies": "Traffic Policies",
  "TrafficPolicy": "Traffic Policy",
  "TrafficStatus": "Traffic Status",
  "TrafficWeight": "Traffic Weight",
  "Trendlines": "Trendlines",
  "TryAlternateLayout": "please try a different layout",
  "Type": "Type",
  "UNSET": "UNSET",
  "UndefinedPropertyType": "Undefined property type",
  "UnhandledEdgeConnectionType": "Unhandled EdgeConnectionType",
  "Unknown": "Unknown",
  "UnknownFlag": "Unknown flag",
  "UnknownMetricType": "Unknown NodeMetricType",
  "Unreachable": "Unreachable",
  "UnreadMessages": "Unread Messages",
  "Update": "Update",
  "UpstreamTLSConfig": "TLS related settings for connections to the upstream service.",
  "UsageNotes": "Usage Notes",
  "UseGraphRefresh": "Use graph refresh",
  "Valid": "Valid",
  "ValidFrom": "Valid from",
  "ValidTo": "Valid To",
  "ValidUntil": "Valid until",
  "Value": "Value",
  "Values": "Values",
  "ValueAxis": "Value axis",
  "Version": "Version",
  "VersionLabel": "Version Label",
  "ViewAnnotations": "View Annotations",
  "ViewCertificatesInfo": "View Certificates Info",
  "ViewDebugInfo": "View Debug Info",
  "ViewInTracing": "View in Tracing",
  "ViewMetrics": "View metrics",
  "ViewModal": "View Modal",
  "ViewOnGraph": "View on Graph",
  "Virtual Service": "Virtual Service",
  "VirtualService": "VirtualService",
  "VirtualServiceHosts": "VirtualService Hosts",
  "VirtualServices": "Virtual Services",
  "VisitOurWebpage": "Visit our web page",
  "Warning": "Warning",
  "WasmPlugin": "WasmPlugin",
  "Waypoint": "Waypoint",
  "WaypointProxy": "Waypoint proxy",
  "When": "When",
  "WhenList": "When List",
  "WithErrors": "With errors",
  "WithoutErrors": "Without errors",
  "Workload Group": "Workload Group",
  "WorkloadEntry": "WorkloadEntry",
  "WorkloadGroup": "WorkloadGroup",
  "WorkloadName": "Workload Name",
  "WorkloadType": "Workload Type",
  "WorkloadWizardSkeleton": "Workload Wizard Skeleton",
  "Workloads": "Workloads",
  "ZoomToFit": "Zoom to Fit",
  "and": "and",
  "audiences": "audiences",
  "availablePod": "available pod",
  "avg": "avg",
  "create": "create",
  "created": "created",
  "currentPod": "current pod",
  "custom": "custom",
  "desiredPod": "desired pod",
  "disabled": "disabled",
  "duration": "duration",
  "enabled": "enabled",
  "fast": "fast",
  "forwardOriginalToken": "forwardOriginalToken",
  "found": "found",
  "fromHeaders": "fromHeaders",
  "fromParams": "fromParams",
  "gateway": "gateway",
  "hideLogText": "hide log text",
  "inbound": "inbound",
  "involved": "involved",
  "issuer": "issuer",
  "istioInjection": "istio-injection",
  "label": "label",
  "mTLS": "mTLS",
  "mTLSIsDisabled": "mTLS is disabled",
  "mTLSTrafficPercentage": "% of mTLS traffic",
  "medium": "medium",
  "mesh": "mesh",
  "minute": "minute",
  "noInboundTraffic": "No inbound traffic.",
  "noObjectReferences": "No references found for this object.",
  "noOutboundTraffic": "No outbound traffic.",
  "noTraffic": "No traffic.",
  "objectReconciliationStatus": "The object is reconciled",
  "onThisNode": "on this node",
  "operationName": "operationName",
  "or": "or",
  "outbound": "Outbound",
  "outputPayloadToHeader": "outputPayloadToHeader",
  "userNopermissionTip": "User does not have permission",
  "previewNewIstioObjects": "Preview new istio objects",
  "responseTime": "responseTime",
  "rt50": "rt50",
  "rt95": "rt95",
  "rt99": "rt99",
  "seconds": "seconds",
  "selectAllMetricLabelFilters": "Select all metric/label filters",
  "separateWith": "(separate with ' ')",
  "sessionExpired": "sessionExpired",
  "showLogText": "show log text",
  "slow": "slow",
  "spans": "spans",
  "startTime": "start time",
  "syncedProx": "synced prox",
  "throughput": "throughput",
  "throughputRequest": "throughputRequest",
  "throughputResponse": "throughputResponse",
  "timeout": "timeout",
  "traffic": " traffic",
  "trafficDistribution": "trafficDistribution",
  "trafficLogged": "traffic logged.",
  "trafficRate": "trafficRate",
  "unknown": "unknown",
  "update": "update",
  "updated": "updated",
  "weightedRouting": "weighted routing",
  "withError": "with error",
  "workloadEntries": "workload entries",

  "Add": {
    "Addresses": "Add Address to Addresses List",
    "FilterLabel": "Add label to Filters",
    "HTTPAbort": "Add HTTP Abort",
    "HTTPDelay": "Add HTTP Delay",
    "HTTPRetry": "Add HTTP Retry",
    "HTTPTimeout": "Add HTTP Timeout",
    "Listener": "Add Listener to Listener List",
    "Operation": "Add Operation to To List",
    "Rule": "Add Rule to Rule List",
    "Server": "Add Server to Servers List"
  },

  "AlertTitle": {
    "AdjustMaxLinesTime": "Increase maxLines for more lines, or decrease time period.",
    "ComponentError": "Something went wrong rendering this component",
    "DebugCopied": "Debug information has been copied to your clipboard.",
    "DebugOutdated": "Debug information was copied to your clipboard, but is outdated now. It could be caused by new data received by auto refresh timers.",
    "ErrorOccurred": "An error occurred",
    "MaxLinesExceeded": "Max lines exceeded for containers"
  },

  "AlertUtils": {
    "ChangesAppliedTimestamp": "Changes applied on",
    "EnableAutoInjection": "Enable Auto Injection",
    "EnableIdleNodesDisplay": "Enabling 'Idle nodes' display option for graph find/hide expression",
    "EnableP95ResponseTimeLabels": "Enabling [P95] 'Response Time' edge labels for this graph find/hide expression",
    "EnableRankDisplay": "Enabling 'Rank' display option for graph find/hide expression",
    "EnableRequestThroughputLabels": "Enabling [Request] 'Throughput' edge labels for this graph find/hide expression",
    "EnableSecurityDisplay": "Enabling 'Security' display option for graph find/hide expression",
    "IdleNodeNoTraffic": "An idle node has no node-specific traffic and can not provide a node detail graph.",
    "InvalidAndCriteria": "Invalid expression. Can not AND node and edge criteria.",
    "IstioConfigErrors": "IstioConfig has errors",
    "IstioConfigWarnings": "IstioConfig has warnings",
    "MissingSidecarNoTelemetry": "A node with a missing sidecar provides no node-specific telemetry and can not provide a node detail graph.",
    "NodeOutOfMeshNoTelemetry": "A node out of the mesh provides no node-specific telemetry and can not provide a node detail graph."
  },

  "AuthorizationPolicyForm": {
    "Action": "Action",
    "AuthPolicyWorkloadLabels": "One or more labels to select a workload where the AuthorizationPolicy is applied.",
    "EnterLabelFormat": "Enter a label in the format <label>=<value>. Enter one or multiple labels separated by comma.",
    "HELPER_TEXT": {
      "ALLOW_ALL": "Allows all requests to workloads in given namespace(s)",
      "DENY_ALL": "Denies all requests to workloads in given namespace(s)",
      "RULES": "Builds an Authorization Policy based on Rules"
    },
    "Labels": "Labels",
    "Policy": "Policy",
    "RuleList": "Rule List",
    "WorkloadSel": "Workload Selector"
  },

  "CONNECTION_POOL_TOOLTIP": {
    "SettingsApplyToEachHostInUpstream": "The settings apply to each individual host in the upstream service.",
    "UpstreamHostConnectionPoolSettings": "Connection pool settings for an upstream host."
  },

  "EmptyGraphLayout": {
    "EmptyGraph": "Empty Graph",
    "EnableIdleNodes": "You can enable 'Idle Nodes' to display service mesh nodes that have yet to see any request traffic.",
    "LoadErr": "Error loading Graph",
    "LoadingGraph": "Loading Graph",
    "NoNamespaceSel": "There is currently no namespace selected, please select one using the Namespace selector.",
    "NoTraffic": "No graph traffic for the time period.",
    "ShowIdleNodes": "Display idle nodes",
    "ShowIdleRefresh": "You are currently displaying 'Idle nodes', send requests to the service mesh and click 'Refresh'.",
    "namespaces": "namespaces"
  },

  "Filter": {
    "App": "Filter by App",
    "AppName": "Filter by App Name",
    "ApplicationHealth": "Filter by Application Health",
    "ClearFilterByName": "Clear Filter by Name",
    "ConfigValidation": "Filter by Config Validation",
    "Error": "Filter by Error",
    "FilterByPercentile": "Filter by percentile",
    "Health": "Filter by Health",
    "IstioConfigType": "Filter by Istio Config Type",
    "IstioName": "Filter by Istio Name",
    "IstioSidecarValidation": "Filter by Istio Sidecar Validation",
    "Label": "Filter by Label",
    "LabelValidation": "Filter by App Label Validation",
    "Name": "Filter by Name...",
    "Namespace": "Filter by Namespace",
    "NamespaceLabel": "Filter by Namespace Label",
    "OperationName": "Filter by Operation Name",
    "ServiceName": "Filter by Service Name",
    "ServiceType": "Filter by Service Type",
    "SpanComponent": "Filter by Span Component",
    "Type": "Filter by Type",
    "VersionLabelValidation": "Filter by Version Label Validation",
    "Workload": "Filter by Workload",
    "WorkloadName": "Filter by Workload Name",
    "WorkloadType": "Filter by Workload Type",
    "label&value": "Filter by label and value",
    "labelPresence": "Filter by label presence",
    "mTLS": "Filter by mTLS",
    "moreLabelOrmoreValues": "Filter by more than one label and one or more values"
  },

  "GATEWAY_TOOLTIP": {
    "GatewayNamesForRoutes": "The names of gateways that should apply these routes.",
    "RoutesApplyOnlyToSpecifiedGateways": "If a list of gateway names is provided, the route rules will apply only to the gateways.",
    "SpecifyReservedWordForBothGatewaysAndSidecars": "To apply rules to both gateways and sidecars, specify the reserverd word"
  },

  "GraphHelpFind": {
    "CannotUseANDWithNameOperand": "Can not use 'AND' with 'name' operand",
    "UseFindAndHideInGraph": "You can use the Find and Hide fields to highlight or hide graph edges and nodes. Each field accepts expressions using the language described below. Preset expressions are available via the dropdown. Hide takes precedence when using Find and Hide together. Uncheck the 'Compressed Hide' Display option for hidden elements to retain their space."
  },

  "GraphSettings": {
    "HTTPThroughputDisplayUnit": "Displays the requested HTTP Throughput. The unit is bytes-per-second (bps) when less than 1024, otherwise kilobytes-per-second (kps). Default: Request Throughput",
    "ResponseTimeApplicability": "Response times only apply to request-based traffic (not TCP or gRPC messaging). Additionally, the following edges do not offer a response time label but the information is available in the side panel when selecting the edge",
    "ResponseTimeDisplayUnit": "Displays the requested response time. The unit is milliseconds (ms) when less than 1000, otherwise seconds (s). Default: 95th Percentile.",
    "ResponseTimeTelemetryUnavailability": "this option will be disabled if response time telemetry is unavailable. Some options may be disabled for the same reason.",
    "ResponseTimeUnavailableEdgesOperation": "edges into or out of operation nodes.",
    "ResponseTimeUnavailableEdgesService": "edges into service nodes",
    "ThroughputApplicability": "Throughput applies only to request-based, HTTP traffic. Additionally, the following edges do not offer a throughput label",
    "ThroughputRequestDataUnit": "HTTP request data in bytes-per-second (bps) or kilobytes-per-second (kps)",
    "ThroughputResponseDataUnit": "HTTP response data in bytes per second (bps) or kilobytes-per-second (kps)",
    "ThroughputTelemetryUnavailability": "This option will be disabled if throughput telemetry is unavailable. Some options may be disabled for the same reason.",
    "TooltipShowEdgeLabels": "Values for multiple label selections are stacked in the same order as the options below. Hover or selection will always show units, an additionally show protocol.",
    "TrafficDistributionDisplay": "HTTP and gRPC Edges display the percentage of traffic for that edge, when less than 100%. For a source node, the sum for outbound edges (per protocol) should be equal to or near 100%, given rounding. TCP edges are not included in the distribution because their rates reflect bytes.",
    "TrafficRateDisplayUnit": "HTTP rates are in requests-per-second (rps). gRPC rates may be in requests-per-second (rps) or messages-per-second (mps). For request rates, the percentage of error responses is shown below the rate, when non-zero. TCP rates are in bytes. The unit is bytes-per-second (bps) when less than 1024, otherwise kilobytes-per-second (kps). Rates are rounded to 2 significant digits.",
    "UnavailableThroughputEdgesOperation": "edges into or out of operation nodes.",
    "UnavailableThroughputEdgesService": "edges into service nodes",
    "badgeOptions": {
      "securityIconDisplay": "Show closed or open lock icons on edges with traffic that differs from the global mTLS policy. The percentage of mTLS traffic can be seen in the side-panel when selecting the edge. Note that the global masthead will show a lock icon when global mTLS is enabled. The side-panel will also display source and destination principals, if available. mTLS status is not offered for gRPC-message traffic.",
      "virtualServiceIconDisplay": "Show virtual service related icons. Additional icons are displayed if a circuit breaker is present on the virtual service or if the virtual service was created through one of the Kiali service wizards."
    },
    "responseTimeOptions": {
      "AverageResponseTime": "Average request response time",
      "MedianResponseTime": "Median request response time (50th Percentile)",
      "NinetyFifthPercentileResponseTime": "Max response time for 95% of requests (95th Percentile)",
      "NinetyNinthPercentileResponseTime": "Max response time for 99% of requests (99th Percentile)"
    },
    "visibilityOptions": {
      "ClusterBoxingEnabled": "When enabled and there are multiple clusters, the graph will box nodes in the same cluster. The 'unknown' cluster is never boxed.",
      "GraphCompressionAfterHide": "Compress the graph after graph-hide removes matching elements. Otherwise the graph maintains the space consumed by the hidden elements.",
      "IdleEdgesFilter": "Idle edges have no request traffic for the time period. Disabled by default to provide cleaner graphs. Enable to help detect unexpected traffic omissions, or to confirm expected edges with no traffic (due to routing, mirroring, etc).",
      "IdleNodesFilter": "With 'Idle Edges' enabled this displays nodes for defined services that have *never* received traffic. With 'Idle Edges' disabled this displays nodes for defined services that have not received traffic during the current time period. Disabled by default to provide cleaner graphs. Enable to help locate unused, misconfigured or obsolete services.",
      "IgnoredOperationsWithNoTraffic": "Operations with no traffic are ignored.",
      "NamespaceBoxingEnabled": "When enabled and there are multiple namespaces, the graph will box nodes in the same namespace, within the same cluster. The 'unknown' namespace is never boxed.",
      "OperationAndServiceNodesEnabledDescription": "When both operation and service nodes are enabled then the operation is displayed specific to each service to which it applies, and therefore may be duplicated for different services. When enabled independently each operation will have a single node representing the total traffic for that operation.",
      "OperationNodesRequireAdditionalConfig": "Operation nodes require additional 'Request Classification' Istio configuration for workloads in the selected namespaces.",
      "ServiceGraphNotApplicable": "This is not applicable to Service graphs.",
      "nodeRankingCriteria": "Rank graph nodes based on configurable criteria such as 'number of inbound edges'. These rankings can be used in the graph find/hide feature to help highlight the most important workloads, services, and applications. Rankings are normalized to fit between 1..100 and nodes may tie with each other in rank. Ranking starts at 1 for the top ranked nodes so when ranking nodes based on 'number of inbound edges', the node(s) with the most inbound edges would have rank 1. Node(s) with the second most inbound edges would have rank 2. Each selected criteria contributes equally to a node's ranking. Although 100 rankings are possible, only the required number of rankings are assigned, starting at 1.",
      "serviceNodeInjection": "Reflect service routing by injecting the destination service nodes into the graph. This can be useful for grouping requests for the same service, but routed to different workloads. Edges leading into service nodes are logical aggregations and will not show response time labels, but if selected the side panel will provide a response time chart.",
      "trafficAnimationToggle": "Animate the graph to reflect traffic flow. The particle density and speed roughly reflects an edge's request load relevant to the other edges. Animation can be CPU intensive."
    }
  },

  "GraphTourStops": {
    "ContextualMenu": {
      "description": "Right-click a node or an edge to see the contextual menu with links to details, traffic and inbound/outbound metrics for the node or edge.",
      "name": "Contextual Menu"
    },
    "ContextualMenuPF": {
      "description": "Right-click a node to see the contextual menu with links to details, traffic, inbound/outbound metrics and node graph.",
      "name": "Contextual Menu"
    },
    "Display": {
      "description": "Set edge labeling, node badging, and various display options. Response-time edge labeling, security badging, and traffic animation may affect performance. Response-times reflect the 95th percentile.",
      "name": "Display"
    },
    "Find": {
      "description": "Highlight or Hide graph elements via typed expressions. Click the dropdown for preset Find or Hide expressions. Click the Find/Hide help icon for details on the expression language.",
      "name": "Find and Hide"
    },
    "Graph": {
      "description": "Click on a node or edge to see its summary and emphasize its end-to-end paths. Double-click a node to see a graph focused on that node.\nDouble-click an 'external namespace' node to navigate directly to the namespace in the node's text label. Shift-Drag to quickly zoom in.",
      "name": "Graph"
    },
    "GraphPF": {
      "description": "Click on a node or edge to see its summary and emphasize its end-to-end paths.",
      "name": "Graph"
    },
    "GraphTraffic": {
      "description": "Choose the traffic rates used to generate the graph. Each supported protocol offers one or more options. Unused protocols can be omitted.",
      "name": "Graph Traffic"
    },
    "GraphType": {
      "description": "Select a workload, service or application graph view. An application view can optionally be versioned and relies on app and version labeling. Workload and service graphs provide physical and logical views, respectively.",
      "name": "Graph Type"
    },
    "Layout": {
      "description": "Select the graph layout for the mesh. Different layouts work best with different meshes. Find the layout that works best. Other buttons here provide zoom and fit-to-screen options.",
      "name": "Layout selection"
    },
    "Legend": {
      "description": "Display the legend to learn about what the different shapes, colors and backgrounds mean.",
      "name": "Legend"
    },
    "Namespaces": {
      "description": "Select the namespaces you want to see in the graph.",
      "name": "Namespaces"
    },
    "Shortcuts": {
      "name": "Shortcuts and tips..."
    },
    "SidePanel": {
      "description": "The Side Panel shows details about the currently selected node or edge, otherwise the whole graph.",
      "name": "Side Panel"
    },
    "TimeRange": {
      "description": "Select how often to refresh the graph and how much historical metric data is used to build the graph, per refresh. For example 'Last 5m' means use the most recent 5 minutes of request metric data.  To replay a historical time window click the replay icon.  This replaces the current time range controls with the replay toolbar.",
      "name": "Time Range & Replay"
    }
  },

  "HTTP": {
    "CookieName": "HTTP Cookie Name",
    "HeaderName": "HTTP Header Name",
    "HelperHeaderText": "HTTP Header Name must be non empty",
    "HelperCookieText": "HTTP Cookie Name must be non empty and TTL must be expressed in in nanoseconds (i.e. 1000, 2000, etc) or seconds (i.e. 10s, 1.5s, etc).",
    "RequestResponseTime": "HTTP Request Response Time (ms)",
    "StatusCode": "HTTP Status Code",
    "AbortStatusMsg": "HTTP status code to use to abort the Http request.",
    "Traffic": {
      "InboundRequest": "HTTP - Inbound Request Traffic",
      "OutboundRequest": "HTTP - Outbound Request Traffic",
      "Request": "HTTP Request Traffic",
      "RequestHasDivider": "HTTP - Request Traffic"
    },
    "requests": {
      "Timeout": "Timeout for HTTP requests. Format: 1h/1m/1s/1ms. MUST be >=1ms.",
      "aborted": "requests aborted (HTTP Status",
      "maxPending": "Maximum number of pending HTTP requests to a destination.",
      "perSecond": "HTTP (requests per second)",
      "perSecondNoParens": "HTTP requests per second"
    }
  },

  "HelperText": {
    "FQDNOrWildcard": "Gateway hosts should be specified using FQDN format or '*' wildcard.",
    "TLInNanosecondsSeconds": "TL is expressed in nanoseconds (i.e. 1000, 2000, etc) or seconds (i.e. 10s, 1.5s, etc).",
    "abortPercentage": "Percentage of requests to be aborted with the error code provided.",
    "caCertificatePath": "The path to a file containing certificate authority certificates to use in verifying a presented  client side certificate.",
    "confirmDeletion": "Are you sure you want to delete ?",
    "confirmTrafficRoutingDeletion": "Confirm Delete Traffic Routing ?",
    "delayForwarding": "Add a fixed delay before forwarding the request. Format: 1h/1m/1s/1ms. MUST be >=1ms.",
    "delayInjectionPercentage": "Percentage of requests on which the delay will be injected.",
    "destinationHosts": "The destination hosts to which traffic is being sent. Enter one or multiple hosts separated by comma.",
    "editingHelpOnImportantFields": "Help information will appear when editing on important fields for this configuration.",
    "errorsLimit": "Number of errors before a host is ejected from the connection pool.",
    "exposeHosts": "One or more hosts exposed by this gateway. Enter one or multiple hosts separated by comma.",
    "exposedGatewayHosts": "One or more hosts exposed by this Gateway.",
    "gatewayWorkloadLabels": "One or more labels to select a workload where the Gateway is applied.",
    "http1PendingRequests": "HTTP1 Max Pending Requests",
    "invalidGatewayHosts": "Invalid hosts for this Gateway. Enter one or more hosts separated by comma.",
    "invalidServiceEntryHosts": "Invalid hosts for this ServiceEntry. Enter one or more hosts separated by comma.",
    "k8sAPIHostsNoIPs": "K8s API Gateway hosts should be specified using FQDN format or '*.' format. IPs are not allowed.",
    "k8sGatewayAPIDisabled": "K8s Gateway API is not enabled",
    "k8sRouteHostsNoIPs": "K8s Route hosts should be specified using FQDN format or '*.' format. IPs are not allowed.",
    "loadBalancingPolicies": "Load balancing policies to apply for a specific destination.",
    "meshForAllSidecars": "The reserved word, 'mesh', implies all of the sidecars in the mesh",
    "noUserPermission": "User does not have permission",
    "noWildcardOnMeshGateway": "VirtualService Host '*' wildcard not allowed on mesh gateway.",
    "provideServiceAccountToken": "Please, provide a Service Account token.",
    "requestAuthenticationWorkloadLabels": "One or more labels to select a workload where the RequestAuthentication is applied.",
    "requestForwardingFilters": "Filters applies for the requests being forwarded by rules defined here.",
    "retryTimeout": "Timeout per retry attempt for a given request. Format: 1h/1m/1s/1ms. MUST be >=1ms.",
    "routeRuleNeeded": "A Request Routing scenario needs at least a Route Rule",
    "routeTrafficHosts": "The route hosts to which traffic is being sent. Enter one or multiple hosts separated by comma.",
    "routingExistsForService": "Traffic routing already exists for this service",
    "routingNotFoundForService": "Traffic routing doesn't exists for this service",
    "ruleActivationConditions": "Match conditions to be satisfied for the rule to be activated.",
    "serverPrivateKeyPath": "The path to the file holding the server’s private key.",
    "serviceEntryHosts": "The hosts associated with the ServiceEntry.",
    "sessionExpiredOrTerminated": "Your session has expired or was terminated in another window.",
    "sidecarWorkloadLabels": "One or more labels to select a workload where the Sidecar is applied.",
    "trafficTunnelingSettings": "PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.",
    "validEgressHostEntry": "Enter a valid namespace/FQDN Egress host."
  },

  "Istio": {
    "AmbientZtunnelDetected": "Istio Ambient ztunnel detected in the Control plane",
    "CautionCreatingConfig": "Be careful when creating the configuration as the Istio config validations are disabled when the Istio API is disabled.",
    "CautionEditIstioConfig": "Be careful when editing the configuration as the Istio config validations are disabled when the Istio API is disabled.",
    "ComponentLabeledAsAmbientMesh": "Component is labeled as part of the Istio Ambient Mesh",
    "ErrorFetchingIstioStatus": "Error fetching Istio deployment status",
    "IstioAPIDisabled": "Istio API is disabled.",
    "IstioComponentList": "Istio Component List",
    "IstioComponentsStatus": "Istio Components Status",
    "IstioConfig": "Istio Config",
    "IstioConfigNeedsCluster": "An Istio Config resource needs at least one cluster selected",
    "IstioConfigNeedsNamespace": "An Istio Config resource needs at least one namespace selected",
    "IstioConfigObjectsAnalyzed": "Istio config objects analyzed",
    "IstioConfigType": "Istio Config Type",
    "IstioContainer": "Istio Container",
    "IstioInitContainer": "Istio Init Container",
    "IstioInjection": "Istio Injection",
    "IstioName": "Istio Name",
    "IstioProxyStatus": "Istio Proxy Status",
    "IstioResourcesDetail": "Istio Resources Detail",
    "IstioSidecarNotFoundCheckInjection": "Istio sidecar container not found in Pod(s). Check if the istio-injection label/annotation is correctly set on the namespace/workload.",
    "IstioSidecarProxy": "Istio Sidecar Proxy",
    "IstioStatusDisabled": "Istio deployment status disabled.",
    "IstioTelemetry": "Istio Telemetry",
    "IstioWasmPlugin": "Istio Wasm Plugin",
    "Layer7CapabilitiesInAmbient": "Layer 7 service Mesh capabilities in Istio Ambient",
    "NoIstioConfigObjects": "No Istio config objects found",
    "NoIstioConfigValidation": "No Istio config validation available",
    "NoIstioSidecar": "No Istio sidecar",
    "OutOfMeshCheckIstioInjection": "Out of mesh. Istio sidecar container or Ambient labels not found in Pod(s). Check if the istio-injection label/annotation is correctly set on the namespace/workload.",
    "SelectReporterForMetrics": "Select the reporter for the metrics displayed. Each Istio metric can be reported by the Source (workload which emitted the request) and by the Destination (workload which received the request). In general, the timeseries will look exactly the same because Source and Destination report the same data.",
    "TrafficToNamespacesExcluded": "Traffic to Istio namespaces not included. Use edge for details.",
    "UnknownTrafficReportedByDestination": "Traffic coming from unknown sources (anything that is not under the Istio mesh) would only be reported by the Destination",
    "UserPermissionCreateIstioConfig": "User does not have permission to create Istio Config on namespace",
    "WorkloadIdentifiedAsWaypointProxy": "This workload is identified as a waypoint proxy, as part of Istio Ambient"
  },

  "JwtRuleBuilder": {
    "AddJWTRule": "Add JWT Rule",
    "ExampleJWTHeaderLocations": "I.e. 'x-jwt-assertion: Bearer ,Authorization: Bearer '",
    "InvalidjwsUri": "jwsUri is not a valid Uri",
    "JWTExpectedHeaderLocations": "List of header locations from which JWT is expected.",
    "JWTRuleField": "JWT Rule Field",
    "JWTRuleNeedsIssuer": "A JWT Rule needs an 'issuer'",
    "NoJWTRules": "No JWT Rules Defined",
    "RemoveField": "Remove Field",
    "ValueNonEmpty": "Value cannot be empty",
    "Values": "Values"
  },

  "Layout": {
    "Layout1": "Layout 1",
    "Layout2": "Layout 2",
    "Layout3": "Layout 3",
    "NamespaceLayout1": "Namespace Layout 1",
    "NamespaceLayout2": "Namespace Layout 2",
    "breadthFirst": "Layout - breadth first",
    "concentric": "Layout - concentric",
    "dagre": "Layout - dagre",
    "grid": "Layout - grid"
  },

  "ListenerTable": {
    "DownstreamConnectLocation": "Network location that can be connected to by downstream clients (Incomming to envoy). List of endpoints:ports that envoy lets traffic",
    "ListenAddress": "The address that the listener should listen on. In general, the address must be unique, though that is governed by the bind rules of the OS",
    "OriginalDestinationFilter": "Original destination listener filter reads the SO_ORIGINAL_DST socket option set when a connection has been redirected by an iptables REDIRECT target, or by an iptables TPROXY target in combination with setting the listener’s transparent option"
  },

  "MTLSStatuses": {
    "AutoMeshWideMTLSEnabled": "Automatic Mesh-wide mTLS is enabled",
    "MTLSEnabled": "mTLS is enabled for this namespace",
    "MTLSEnabledExtended": "mTLS is enabled for this namespace, extended from Mesh-wide config",
    "MTLSPartiallyEnabled": "mTLS is partially enabled for this namespace",
    "MeshWideMTLSEnabled": "Mesh-wide mTLS is enabled",
    "MeshWideMTLSEnabledByDefault": "Mesh-wide mTLS is enabled, configured by default",
    "MeshWideTLSPartiallyEnabled": "Mesh-wide TLS is partially enabled",
    "MeshWideTLSPartiallyEnabledByDefault": "Mesh-wide TLS is partially enabled, configured by default"
  },

  "MeshPageComponent": {
    "APIEndpoint": "API Endpoint",
    "ClusterName": "Cluster Name",
    "EmptyStateBody": "No clusters were discovered in your mesh.",
    "Network": "Network",
    "NoClusters": "No Clusters",
    "SecretName": "Secret name"
  },

  "MissingLabel": {
    "labelImpactOnTelemetry": "Missing labels may impact telemetry reported by the Istio proxy.",
    "missingAppLabel": "label is missing.",
    "missingVersionLabel": "label is missing.",
    "telemetryImpact": "The label is recommended as it affects telemetry.",
    "unlinkedWorkload": "This workload won't be linked with an application."
  },

  "Options": {
    "grpcOptions": {
      "ReceivedMsgRate": "Received (i.e. Response) message rate in messages-per-second (mps). Captures server streaming RPCs.",
      "RequestRate": "Request message rate in requests-per-second (rps). Captures unary RPC, with status codes.",
      "SentMsgRate": "Sent (i.e. Request) message rate in messages-per-second (mps). Captures client streaming RPCs.",
      "TotalMsgRate": "Combined (Sent + Received) message rate in messages-per-second (mps). Captures all streaming RPCs."
    },
    "httpOptions": {
      "RPSWithStatusCodes": "Request message rate in requests-per-second (rps). Captures status codes."
    },
    "tcpOptions": {
      "ReceivedBytesPerSecond": "Received bytes rate in bytes-per-second (bps).",
      "SentBytesPerSecond": "Sent bytes rate in bytes-per-second (bps).",
      "TotalBytesPerSecond": "Combined (Sent + Received) byte rate in bytes-per-second (mps)."
    }
  },

  "PeerAuthenticationForm": {
    "EnterLabelFormat": "Enter a label in the format <label>=<value>. Enter one or multiple labels separated by comma.",
    "Labels": "Labels",
    "MutualTLSMode": "Mutual TLS Mode",
    "PeerAuthNoPortMTLS": "PeerAuthentication has no Port Mutual TLS defined",
    "PortLevelMTLS": "Port Level MTLS",
    "PortMTLSRequiresWorkloadSel": "Port Mutual TLS requires a Workload Selector",
    "PortMutualTLS": "Port Mutual TLS",
    "PortNumber": "Port Number",
    "RemovePortMTLS": "Remove Port MTLS",
    "WorkloadSel": "Workload Selector",
    "WorkloadSelectionLabels": "One or more labels to select a workload where the PeerAuthentication is applied."
  },

  "TCP": {
    "Connection": "TCP Connection",
    "MaxHTTP1Connections": "Maximum number of HTTP1 /TCP connections to a destination host",
    "Traffic": {
      "label": "TCP - Traffic",
      "HasShifting": "Has TCP Traffic Shifting",
      "Inbound": "TCP - Inbound Traffic",
      "Outbound": "TCP - Outbound Traffic",
      "bytesPerSecond": "TCP Traffic (bytes per second)"
    }
  },

  "WorkloadPodLogsComponent": {
    "DisplaySelectedPodLogs": "Display logs for the selected pod",
    "NoContainerLogsFound": "No container logs found for the time period.",
    "NoPodsAvailableNoLogs": "There are no logs to display because no pods are available.",
    "Spans": "Spans",
    "TruncateLogAfterNLines": "Truncate after N log lines",
    "tooltip": {
      "ClearHideLogEntries": "Clear Hide Log Entries...",
      "ClearShowLogEntries": "Clear Show Log Entries...",
      "ClickForEnvoyAccessLogDetails": "Click for Envoy Access Log details",
      "ClickForSpanDetail": "Click to navigate to span detail",
      "ConfigureProxyLoggerLevelMode": "This action configures the proxy logger lely mode.",
      "CopyLogsToClipboard": "Copy logs to clipboard",
      "ExpandLogsFullScreen": "Expand logs full screen",
      "SetProxyLogLevel": "Set Proxy Log Level",
      "ShowHideLogEntriesHelp": "Show only, or Hide all, matching log entries. Match by case-sensitive substring (default) or regular expression (as set in the kebab menu)."
    }
  },

  "WorkloadTypeLabel": {
    "CronJob": "CronJob",
    "DaemonSet": "DaemonSet",
    "Deployment": "Deployment",
    "DeploymentConfig": "DeploymentConfig",
    "Job": "Job",
    "Pod": "Pod",
    "ReplicaSet": "ReplicaSet",
    "ReplicationController": "ReplicationController",
    "StatefulSet": "StatefulSet"
  },

  "cellsTitle": {
    "App/Workload": "App / Workload",
    "JWTRulesValidated": "JWT Rules to be validated",
    "Request": {
      "AdditionalConditionsReq": "Additional Conditions of a Request",
      "OperationsReq": "Operations of a Request",
      "SourceMatchesReq": "Source Matches of a Request"
    },
    "Statistics": "Statistics",
    "Summary": "Summary",
    "Timeline": "Timeline"
  },

  "date": {
    "d": "d",
    "h": "h",
    "m": "m",
    "s": "s"
  },
  "description": {
    "bytesReceived": {
      "BYTES_RECEIVED": "BYTES_RECEIVED",
      "HTTP": "Body bytes received.",
      "TCP": "Downstream bytes received on connection."
    },
    "bytesSent": {
      "BYTES_SENT": "BYTES_SENT",
      "HTTP": "Body bytes sent. For WebSocket connection it will also include response header bytes.",
      "TCP": "Downstream bytes sent on connection."
    },
    "clickFieldNameForDescription": "Click Field Name for Description",
    "default": "No documentation available",
    "downstreamLocal": {
      "DOWNSTREAM_LOCAL_ADDRESS": "DOWNSTREAM_LOCAL_ADDRESS",
      "OriginalDestinationFilter": "Original Destination Filter",
      "content1": "Local address of the downstream connection. If the address is an IP address it includes both address and port. If the original connection was redirected by iptables REDIRECT, this represents the original destination address restored by the",
      "content2": "using SO_ORIGINAL_DST socket option. If the original connection was redirected by iptables TPROXY, and the listener’s transparent option was set to true, this represents the original destination address and port."
    },
    "downstreamRemote": {
      "DOWNSTREAM_REMOTE_ADDRESS": "DOWNSTREAM_REMOTE_ADDRESS",
      "content": "Remote address of the downstream connection. If the address is an IP address it includes both address and port."
    },
    "duration": {
      "DURATION": "DURATION",
      "HTTP": "Total duration in milliseconds of the request from the start time to the last byte out.",
      "JSONLogs": "Renders a numeric value in typed JSON logs.",
      "TCP": "Total duration in milliseconds of the downstream connection."
    },
    "forwardedFor": {
      "HTTP": "ForwardedFor is the X-Forwarded-For header value %REQ(FORWARDED-FOR)%"
    },
    "method": {
      "HTTP": "Method is the HTTP method %REQ(:METHOD)%"
    },
    "protocol": {
      "JSONLogs": "In typed JSON logs, PROTOCOL will render the string",
      "condition": "if the protocol is not available (e.g. in TCP logs).",
      "label": "PROTOCOL"
    },
    "requestAuthorityHeader": "Authority is the request authority header %REQ(:AUTHORITY)%",
    "requestId": "RequestId is the envoy generated X-REQUEST-ID header '%REQ(X-REQUEST-ID)%'",
    "requestedServer": {
      "REQUESTED_SERVER_NAME": "REQUESTED_SERVER_NAME",
      "content": "String value set on ssl connection socket for Server Name Indication (SNI)"
    },
    "responseFlags": {
      "DC": "Downstream connection termination.",
      "DI": {
        "FaultInjection": "Fault Injection",
        "content": "The request processing was delayed for a period specified via"
      },
      "DPE": "The downstream request had an HTTP protocol error.",
      "FI": {
        "content": "The request was aborted with a response code specified via",
        "faultInjection": "fault injection"
      },
      "LH": {
        "LocalServiceFailed": "Local service failed",
        "healthCheckRequest": "health check request"
      },
      "LR": "Connection local reset in addition to 503 response code.",
      "NC": "Upstream cluster not found.",
      "RESPONSE_FLAGS": "RESPONSE_FLAGS",
      "RLSE": "The request was rejected because there was an error in rate limit service.",
      "SI": "Stream idle timeout in addition to 408 response code.",
      "UAEX": "The request was denied by the external authorization service.",
      "UC": "Upstream connection termination in addition to 503 response code.",
      "UF": "Upstream connection failure in addition to 503 response code.",
      "UH": "No healthy upstream hosts in upstream cluster in addition to 503 response code.",
      "UMSDR": "The upstream request reached to max stream duration.",
      "UPE": "The upstream response had an HTTP protocol error.",
      "UR": "Upstream remote reset in addition to 503 response code.",
      "UT": "Upstream request timeout in addition to 504 response code.",
      "responseFlags": "Additional details about the response or connection, if any. For TCP connections, the response codes mentioned in the descriptions do not apply. Possible values are"
    },
    "routeName": {
      "ROUTE_NAME": "ROUTE_NAME",
      "content": "RouteName is the name of the VirtualService route which matched this request %ROUTE_NAME%"
    },
    "statusCode": {
      "HTTP": {
        "content": "Note that in the case of 100-continue responses, only the response code of the final headers will be logged. If a 100-continue is followed by a 200, the logged response will be 200. If a 100-continue results in a disconnect, the 100 will be logged.",
        "statusCode": "HTTP response code. Note that a response code of ‘0’ means that the server never sent the beginning of a response. This generally means that the (downstream) client disconnected."
      },
      "RESPONSE_CODE": "RESPONSE_CODE",
      "content": "Renders a numeric value in typed JSON logs."
    },
    "tcpServiceTime": {
      "HTTP": "TCPServiceTime is the X-ENVOY-UPSTREAM-SERVICE-TIME header '%REQ(X-ENVOY-UPSTREAM-SERVICE-TIME)%'"
    },
    "timestamp": {
      "Explanation": "Explanation",
      "FractionalSecondsDigits": "Fractional seconds digits, default is 9 digits (nanosecond)",
      "HTTP": "Request start time including milliseconds.",
      "JSONLogs": "In typed JSON logs, START_TIME is always rendered as a string.",
      "Specifier": "Specifier",
      "TCP": "Downstream connection start time including milliseconds.",
      "microsecond": "microsecond (6 digits)",
      "millisecond": "millisecond (3 digits)",
      "nanosecond": "nanosecond (9 digits)",
      "sinceEpochSeconds": "The number of seconds since the Epoch",
      "startTime": "START_TIME",
      "startTimeFollows": "Examples of formatting START_TIME is as follows",
      "startTimeTip": "%START_TIME(%Y/%m/%dT%H:%M:%S%z %s)% # To include millisecond fraction of the second (.000 ... .999). E.g. 1527590590.528. %START_TIME(%s.%3f)% %START_TIME(%s.%6f)% %START_TIME(%s.%9f)%"
    },
    "upstreamCluster": {
      "UPSTREAM_CLUSTER": "UPSTREAM_CLUSTER"
    },
    "upstreamFailureReason": {
      "UPSTREAM_TRANSPORT_FAILURE_REASON": "UPSTREAM_TRANSPORT_FAILURE_REASON"
    },
    "upstreamLocal": {
      "UPSTREAM_LOCAL_ADDRESS": "UPSTREAM_LOCAL_ADDRESS",
      "content": "Local address of the upstream connection. If the address is an IP address it includes both address and port."
    },
    "upstreamService": {
      "UPSTREAM_HOST": "UPSTREAM_HOST"
    },
    "uriPath": {
      "HTTP": "An HTTP request header: '%REQ(X-ENVOY-ORIGINAL-PATH?):PATH'"
    },
    "userAgent": {
      "HTTP": "An HTTP request header: '%REQ(USER-AGENT)'"
    }
  },

  "emptyStateBody": {
    "AllNamespacesFilteredOrNoAccess": "Either all namespaces are being filtered or the user has no permission to access namespaces.",
    "FetchMetricError": "An error occured while fetching this metric",
    "NoData": "No data available",
    "NoLogsNoPods": "There are no logs to display because the workload has no pods.",
    "NoMatchingSpans": "No spans match the current filters"
  },
  "emptyStateHeader": {
    "NoNamespace": "No namespace is selected",
    "NoRouteRules": "No Route Rules defined",
    "NoSpans": "No spans found"
  },

  "errorMsg": {
    "AuthFailed!": "Authentication failed!",
    "AuthFailed.": "Authentication failed.",
    "ErrorFetchingCanaryStatus": "Error fetching canary upgrade status.",
    "ErrorFetchingIstiodThresholds": "Error fetching Istiod resource thresholds.",
    "ErrorFetchingOutboundPolicy": "Error fetching Mesh OutboundTrafficPolicy.Mode.",
    "ErrorFetchingServerStatus": "Error fetching server status.",
    "ErrorGettingCertsInfo": "An error occurred getting certificates information",
    "FailedFetchLogs": "Failed to fetch workload logs",
    "InvalidDirectionType": "Direction type is not valid.",
    "InvalidNodeOrEdge": "Invalid Node or Edge operand",
    "InvalidOverviewType": "Overview type is not valid.",
    "NoApp": "No App is selected",
    "NoIstioObj": "No Istio object is selected",
    "NoPods": "No Pods in workload",
    "NoValidOperator": "No valid operator found in expression",
    "NoWorkload": "No Workload is selected",
    "NotInMesh": "is not found in the mesh",
    "OpenIDAuthFailed": "OpenID authentication failed.",
    "UnableSetProxyLevel": "Unable to set proxy pod level",
    "UnknownEdgeConnectionType": "Unknown EdgeConnectionType, ControlPoint.length="
  },

  "failure": {
    "CouldNot": "Could not",
    "appDetailsFetchFailed": "Could not fetch App Details.",
    "appsListUnavailable": "Could not fetch apps list",
    "couldNotDeleteTrafficPolicies": "Could not delete traffic policies.",
    "couldNotUpdateNamespace": "Could not update namespace ",
    "customDashboardUnavailable": "Could not fetch custom dashboard.",
    "gatewaysListUnavailable": "Could not fetch Gateways list.",
    "grafanaInfoUnavailableDisablingGrafanaLinks": "Could not fetch Grafana info. Turning off links to Grafana.",
    "graphLoadingError": "Cannot load the graph",
    "healthDataUnavailable": "Could not fetch health",
    "healthIstioConfigFetchFailed": "Could not fetch Health/IstioConfig.",
    "istioConfigDetailsDeletionFailed": "Could not delete IstioConfig details.",
    "istioConfigDetailsUpdateFailed": "Could not update IstioConfig details.",
    "istioConfigObjectsDeletionFailed": "Could not delete Istio config objects.",
    "istioObjectsListUnavailable": "Could not fetch Istio objects list",
    "meshClusterListUnavailable": "Could not fetch the list of clusters that are part of the mesh",
    "metricsStatsUnavailable": "Could not fetch metrics stats.",
    "metricsUnavailable": "Could not fetch metrics",
    "namespaceListUnavailable": "Could not fetch namespace list",
    "parentNodeNotFound": "Could not find parent node",
    "peerAuthenticationsUnavailable": "Could not fetch PeerAuthentications.",
    "percentilesUnavailable": "Could not fetch percentiles",
    "permissionsFetchFailed": "Could not fetch Permissions.",
    "queryAboveRequestedPercentileNotPossible": "Cannot perform query above the requested percentile (value unknown).",
    "requestedNodeUnavailableMaybeIdleOrHidden": "Could not focus on requested node. The node may be idle or hidden.",
    "serviceDetailsFetchFailed": "Could not fetch Service Details.",
    "serviceDetailsUnavailable": "Could not fetch Service Details.",
    "serviceUpdateFailed": "Could not update service",
    "servicesListUnavailable": "Could not fetch services list",
    "spansUnavailable": "Could not fetch spans.",
    "tlsStatusUnavailable": "Could not fetch TLS status",
    "traceUnavailable": "Could not fetch trace",
    "tracesUnavailable": "Could not fetch traces.",
    "tracingInfoUnavailableDisablingTracing": "Could not fetch Tracing info. Turning off Tracing integration.",
    "trafficDataUnavailable": "Could not fetch traffic data",
    "validationStatusUnavailable": "Could not fetch validations status",
    "workloadUnavailable": "Could not fetch Workload.",
    "workloadUpdateFailed": "Could not update workload",
    "workloadsListFetchFailed": "Could not fetch workloads list"
  },

  "gRPC": {
    "RequestResponseTime": "gRPC Request Response Time (ms)",
    "Traffic": {
      "Inbound": "gRPC - Inbound Traffic",
      "InboundRequest": "gRPC - Inbound Request Traffic",
      "Message": "gRPC Message Traffic",
      "Outbound": "gRPC - Outbound Traffic",
      "OutboundRequest": "gRPC - Outbound Request Traffic",
      "Request": "gRPC Request Traffic",
      "RequestHasDivider": "gRPC - Request Traffic",
      "label": "gRPC - Traffic",
      "requestsPerSecond": "GRPC Traffic (requests per second)"
    }
  },

  "labelContent": {
    "0SpansWithError": "0 Spans with error",
    "ShowErrorsTraces": "Show only traces with errors",
    "hasUnexpectedFormat": "This label has an unexpected format"
  },

  "legendData": {
    "App": "App",
    "CircuitBreaker": "Circuit Breaker",
    "Degraded": "Degraded",
    "Edges": "Edges",
    "FailedRequest": "Failed Request",
    "Failure": "Failure",
    "FaultInjection": "Fault Injection",
    "Gateway": "Gateway",
    "Healthy": "Healthy",
    "Idle": "Idle",
    "Mirroring": "Mirroring",
    "MissingSidecar": "Missing Sidecar",
    "NodeBackground": "Node Background",
    "NodeBadges": "Node Badges",
    "NodeColors": "Node Colors",
    "NodeShapes": "Node Shapes",
    "Normal": "Normal",
    "NormalRequest": "Normal Request",
    "NotReady": "Not Ready",
    "Operation": "Operation",
    "RequestTimeout": "Request Timeout",
    "Restricted/External": "Restricted / External",
    "Service": "Service",
    "ServiceEntry": "Service Entry",
    "Shifting": "Traffic Shifting / TCP Traffic Shifting",
    "TCPTraffic": "TCP Traffic",
    "TrafficAnimation": "Traffic Animation",
    "TrafficSource": "Traffic Source",
    "Unhealthy": "Unhealthy",
    "UnselectedNamespace": "Unselected Namespace",
    "VirtualService/RequestRouting": "Virtual Service / Request Routing",
    "Warn": "Warn",
    "Workload": "Workload",
    "WorkloadEntry": "Workload Entry",
    "mTLSBadge": "mTLS (badge)"
  },

  "login": {
    "failed": {
      "prep": "Preparation for login failed, try again.",
      "retry": "You will need to re-login. Please save your changes, if any."
    },
    "sessionExpireIn": "Your session will expire in ",
    "sessionHasExpired": "Your session has expired."
  },

  "placeholder": {
    "AuthorityValue": "Authority value...",
    "ClearFind": "Clear Find...",
    "ClearHide": "Clear Hide...",
    "Find": "Find...",
    "FindOrHideHelp": "Find/Hide Help...",
    "HeaderName": "Header name...",
    "HeaderValue": "Header Value...",
    "Hide": "Hide...",
    "Hostname": "Hostname...",
    "Loading": "Loading...",
    "LoadingChart": "Loading chart...",
    "MethodCalue": "Method value...",
    "MoreLabels": "More labels...",
    "PathValue": "Path value...",
    "Port": "Port...",
    "QueryParamName": "Query param name...",
    "QueryParamValue": "Query param value...",
    "Replay": "Replay...",
    "SchemeValue": "Scheme value...",
    "SetLabel": "Set Label",
    "Show": "Show...",
    "UriValue": "Uri value..."
  },

  "renderCharts": {
    "DestinationInaccessibleNoSparkline": "Sparkline charts cannot be shown because the destination is inaccessible.",
    "ErrorLoadingMetrics": "Error loading metrics",
    "LoadingCharts": "Loading charts...",
    "ServiceGraphsNoAggregateSparklines": "Service graphs do not support service-to-service aggregate sparklines. See the chart above for aggregate traffic or use the workload graph type to observe individual workload-to-service edge sparklines.",
    "UseWorkloadGraphForIndividualSparklines": "Service graphs do not support service-to-service aggregate sparklines. Use the workload graph type to observe individual workload-to-service edge sparklines."
  },

  "renderClusterType": {
    "EDS": {
      "EndpointDiscoveryService": "The endpoint discovery service is a xDS management server based on gRPC or REST-JSON API server used by Envoy to fetch cluster members.",
      "content": "EDS"
    },
    "InboundEvents": "The inbound cluster events are the events that come into a node. These cluster events come from another node and enter other nodes.",
    "LOGICAL_DNS": {
      "LogicalDNSResolution": "Logical DNS uses a similar asynchronous resolution mechanism to strict DNS. However, instead of strictly taking the results of the DNS query and assuming that they comprise the entire upstream cluster, a logical DNS cluster only uses the first IP address returned when a new connection needs to be initiated",
      "content": "LOGICAL_DNS"
    },
    "ORIGINAL_DST": {
      "OriginalDestinationCluster": "Original destination cluster can be used when incoming connections are redirected to Envoy either via an iptables REDIRECT or TPROXY target or with Proxy Protocol",
      "content": "ORIGINAL_DST"
    },
    "OutboundEvents": "The outbound cluster events are the events that go out of a node. These cluster events are produced and sent from a node to other nodes.",
    "STATIC": {
      "StaticServiceDiscovery": "Static is the simplest service discovery type. The configuration explicitly specifies the resolved network name (IP address/port, unix domain socket, etc.) of each upstream host.",
      "content": "STATIC"
    },
    "STRICT_DNS": {
      "ContinuousAsyncDNSResolution": "Envoy will continuously and asynchronously resolve the specified DNS targets",
      "content": "STRICT_DNS"
    },
    "UpstreamHostGroup": "Group of logically similar upstream hosts that Envoy connects to. (All the hosts that envoy manage traffic)"
  },

  "renderSparklines": {
    "SelectedNodeInaccessibleNoSparkline": "Sparkline charts cannot be shown because the selected node is inaccessible.",
    "ServiceEntryNoSparkline": "Sparkline charts cannot be shown because the selected node is a serviceEntry.",
    "TrafficFromUnknownExcluded": "Traffic from unknown not included. Use edge for details.",
    "UnknownNodeNoSparkline": "Sparkline charts not supported for unknown node. Use edge for details."
  },

  "responseFlags": {
    "DC": {
      "help": "Downstream connection termination",
      "short": "Downstream cx term"
    },
    "DI": {
      "help": "Delayed via fault injection"
    },
    "DPE": {
      "help": "Downstream request had an HTTP protocol error (is port type correct?)",
      "short": "Downstream invalid HTTP"
    },
    "FI": {
      "help": "Aborted via fault injection"
    },
    "IH": {
      "help": "Invalid value for a strictly-checked header",
      "short": "Invalid header value"
    },
    "LH": {
      "help": "Local service failed health check request",
      "short": "Failed health check"
    },
    "LR": {
      "help": "Connection local reset"
    },
    "NR": {
      "help": "No route configured (check DestinationRule or VirtualService)",
      "short": "No route"
    },
    "RL": {
      "RateLimit": "Rate limit",
      "help": "Ratelimited locally by the HTTP rate limit filter"
    },
    "RLSE": {
      "help": "Rate limited service error"
    },
    "SI": {
      "help": "Stream idle timeout"
    },
    "UAEX": {
      "help": "Unauthorized external service"
    },
    "UC": {
      "help": "Stream idle timeout",
      "short": "Upstream cx term"
    },
    "UF": {
      "help": "Upstream connection failure (check for mutual TLS configuration conflict",
      "short": "Upstream cx failure"
    },
    "UH": {
      "help": "No healthy upstream hosts in upstream cluster",
      "short": "No healthy upstream"
    },
    "UMSDR": {
      "help": "Upstream request reached max stream duration"
    },
    "UO": {
      "help": "Upstream overflow (circuit breaker open)",
      "short": "Circuit breaker open"
    },
    "UR": {
      "help": "Upstream remote reset"
    },
    "URX": {
      "help": "Upstream retry limit (HTTP) or Max connect attempts (TCP) exceeded",
      "short": "Upstream retry/connect limit"
    },
    "UT": {
      "help": "Upstream request timeout"
    }
  },

  "routeRules": {
    "AnyRequestMatchInPreviousRule": "Match 'Any request' is defined in a previous rule.",
    "RoutingNeedsRouteRule": "A Request Routing scenario needs at least a Route Rule",
    "RuleInaccessible": "This rule is not accessible.",
    "delayedRequests": "requests delayed",
    "mirroredTraffic": "mirrored traffic",
    "routedTraffic": "routed traffic",
    "timeoutAttempts": "attempts with timeout"
  },

  "shortcuts": {
    "MouseWheel": {
      "shortcut": "Mouse wheel",
      "description": "Zoom"
    },
    "ClickDrag": {
      "shortcut": "Click + Drag",
      "description": "Panning"
    },
    "ShiftDrag": {
      "shortcut": "Shift + Drag",
      "description": "Select zoom area"
    },
    "RightClick": {
      "shortcut": "Right click",
      "description": "Contextual menu on nodes"
    },
    "SingleClick": {
      "shortcut": "Single click",
      "description": "Details in side panel on nodes and edges"
    },
    "DoubleClick": {
      "shortcut": "Double click",
      "description": "Drill into a node details graph"
    }
  },

  "tooltip": {
    "ActiveGRPCEdgesDisplay": "Displays active gRPC Edges for the time period, using the selected gRPC rate. To see idle gRPC Edges enable the 'Idle Edges' Display menu option. Default: Requests.",
    "ActiveHTTPEdges": "Displays active HTTP Edges for the time period, using the selected HTTP rate. To see idle HTTP Edges enable the 'Idle Edges' Display menu option. Default: Requests.",
    "ActiveTCPEdges": "Displays active TCP Edges for the time period, using the selected TCP rate. To see inactive TCP Edges enable the 'Idle Edges' Display menu option. Default: Sent Bytes.",
    "AllNamespaceTraffic": "All inbound, outbound and internal namespace traffic.",
    "AllRequestedNamespacesTraffic": "All inbound, outbound and traffic within the requested namespaces.",
    "AmbientMeshLabel": "labeled as part of Ambient Mesh",
    "AppTraceLimit": "This limits the number of app-level traces that will be fetched. Because an app may be comprised of several workload versions not every trace trace may apply to a particular workload. It may be necessary to increase the limit to get the desired number of workload traces. In some cases the same can be true of service traces.",
    "BackToFullGraphButton": "Back to full graph",
    "CannotRemoveFilterIfExpression": "Kiali can't remove the filter if is an expression",
    "CloseClearTraceSelection": "Close and clear trace selection",
    "ConfigDelaySeconds": "This value represents the delay in seconds between config change and a proxy receiving all required  configuration.",
    "DownloadAllResources": "Download all resources in a file",
    "ErrorFetchingMeshWideMTLSStatus": "Error fetching Mesh-wide mTLS status.",
    "GoToKiali": "Go to this Kiali instance",
    "HTTPRequestTimeout": "Timeout for HTTP requests, default is disabled.",
    "HeatmapDurationComparison": "This heatmap is a comparison matrix of this request duration against duration statistics aggregated over time. Move the pointer over cells to get more details.",
    "InboundClusterTraffic": "Traffic entering from another cluster.",
    "InboundNamespaceTraffic": "Traffic entering from another namespace.",
    "InboundSourcesTraffic": "Traffic entering from traffic sources.",
    "IncludeInfoForBug": "Please include this information when opening a bug",
    "InsufficientUserPermission": "User does not have enough permission for this action",
    "IstiodCPU": "This values represents cpu of the istiod ",
    "LabelFilterInstructions": "To set a label filter you must enter values like.",
    "LoadMoreStats": "Click to load more statistics for this reques",
    "MeshMinTLSVersion": "The meshConfig.meshMTLS.minProtocolVersion field specifies the minimum TLS version for the TLS connections among Istio workloads. N/A if it was not set.",
    "MeshWideMTLSStatusDisabled": "Mesh-wide mTLS status feature disabled.",
    "MirrorTrafficToWorkload": "Mirror % traffic to this Workload",
    "NoHistogramDataAvailable": "'No data available' is displayed for a histogram that does not have telemetry supporting the selected option. If no histograms support the necessary telemetry, the option will be disabled.",
    "NoSidecarWorkloadsForService": "There are not Workloads with sidecar for this service",
    "OriginalDestClusterForRedirectedConnections": "Original destination cluster can be used when incoming connections are redirected to Envoy either via an iptables REDIRECT or TPROXY target or with Proxy Protocol",
    "OutboundAnotherNamespaceTraffic": "Traffic exiting to another namespace.",
    "OutboundClusterTraffic": "Traffic exiting to another cluster.",
    "OutboundRequestedNamespacesTraffic": "Traffic exiting the requested namespaces.",
    "OutboundTrafficConfig": "This value represents the meshConfig.outboundTrafficPolicy.mode, that configures the sidecar handling  of external services, that is, those services that are not defined in Istio’s internal service  registry. If this option is set to ALLOW_ANY, the Istio proxy lets calls to unknown services pass  through. If the option is set to REGISTRY_ONLY, then the Istio proxy blocks any host without an HTTP  service or service entry defined within the mesh",
    "PercentileFilterDescription": "These percentiles are computed from metrics. To refresh them, reload the page. The filter applies on span durations. Thus, the filtered traces are the ones where at least one span for the service satisfies the duration criteria.",
    "ReadOnlyYAMLView": "This is a Read only view of the YAML including Validations. It is possible to edit directly in Kiali ",
    "RemoveLabelFromFilters": "Remove label from Filters",
    "ResourceLabels": "Labels defined on this resource",
    "RetryPolicy ": "Describes the retry policy to use when a HTTP request fails.",
    "RouteRulesList": "An ordered list of route rules for HTTP traffic.",
    "RouteTable": {
      "envoyDomainMatch": "Envoy will be matched this domain to this virtual host.",
      "envoyNetworkConnection": "Network connection between source a destination that is configured in envoy",
      "routeActionMatchTree": "The match tree to use when resolving route actions for incoming requests"
    },
    "SelectTimeRangeRefreshInterval": "Select the time range of shown data, and the refresh interval.",
    "SelectedPodEnvoyConfig": "Display envoy config for the selected pod",
    "ServiceLabels": "Labels defined on the Service",
    "TotalClusterTraffic": "All inbound, outbound and internal cluster traffic.",
    "ViewTraceDetailsForService": "View trace details for",
    "WorkloadTemplateLabels": "Labels defined on the Workload template",
    "checkSidePanelForInfo": "This field has help information. Check the side panel for more information.",
    "metricsReport": {
      "exceptionReporting": "There are some exceptions",
      "injectedFaultReporting": "Fault-injected failures only reported by the Source",
      "metricReporterSelection": "Select the reporter for the metrics displayed. Each Istio metric can be reported by the Source (workload which emitted the request) and by the Destination (workload which received the request). In general, the  timeseries will look exactly the same because Source and Destination report the same data.",
      "sourceReportedFailures": "An opened circuit breaker would cause networking failures only reported by the Source",
      "unknownTrafficReporting": "Traffic coming from unknown sources (anything that is not under the Istio mesh) would only be reported by the Destination"
    },
    "traceDetails": {
      "AverageSpanDurationDescription": "The average duration of all spans within the trace. It differs from full duration, as spans can run in parallel, or there can be dead time between spans.",
      "FullTraceDurationDescription": "The full trace duration is (trace end time) - (trace start time).",
      "IncompleteDataCheckSpanDetails": "Incomplete data, check Span Details",
      "NoSimilarTracesFoundMessage": "No similar traces found",
      "SimilarityTraceIdentificationMethod": "Traces are identified as similar based on counting the number of spans and the occurrences of operation names. Only traces currently on the chart are processed."
    },
    "userNoWorkloadPermission": "User does not have permission on this Workload"
  },

  "topologySummary": {
    "app": "app",
    "apps": "apps",
    "edge": "edge",
    "edges": "edges",
    "service": "service",
    "services": "services",
    "versions": "versions",
    "workload": "workload",
    "workloads": "workloads"
  },

  "validation": {
    "ChecksFailed": "Not all checks passed!",
    "DuplicateKeysFound": "Duplicate keys found.",
    "EmptyKeysFound": "Empty keys found.",
    "EmptyValuesFound": "Empty values found.",
    "failedPod": "Pod is in Failed Phase",
    "failingPodAppContainer": "Pod has failing app container",
    "failingPodContainer": "Pod has failing container",
    "failingPodIstioContainer": "Pod has failing Istio container",
    "noAppLabel": "Pod has no app label",
    "noIstiosidecar": "Pod has no Istio sidecar",
    "noVersionLabel": "Pod has no version label",
    "pendingPod": "Pod is in Pending Phase",
    "unknownPod": "Pod is in Unknown Phase"
  },

  "validationMsg": {
    "ConditionKeyNotSupported": "Condition Key not supported",
    "DuplicateRuleCriteria": "A Rule with same matching criteria is already added.",
    "HeaderNameNonEmpty": "Header name must be non empty",
    "HeaderValueNonEmpty": "Header value must be non empty",
    "InvalidFaultInjection": "Fault Injection not valid",
    "InvalidIP": "Not valid IP",
    "InvalidRequestTimeout": "Request Timeout not valid",
    "QueryNameNonEmpty": "Query name must be non empty",
    "QueryValueNonEmpty": "Query value must be non empty",
    "SumWeights100Percent": "The sum of all non-mirrored weights must be 100 %",
    "ValuesNotValuesNotEmpty": "Values and NotValues cannot be empty"
  }
}
